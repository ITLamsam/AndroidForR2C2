// Generated by view binder compiler. Do not edit!
package com.example.fyp_robot_dog_androidx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyp_robot_dog_androidx.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemTwoBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView OrderID;

  @NonNull
  public final TextView Receiver;

  @NonNull
  public final TextView Sender;

  @NonNull
  public final TextView StartTime;

  @NonNull
  public final TextView itemType;

  @NonNull
  public final TextView place;

  private ListItemTwoBinding(@NonNull CardView rootView, @NonNull TextView OrderID,
      @NonNull TextView Receiver, @NonNull TextView Sender, @NonNull TextView StartTime,
      @NonNull TextView itemType, @NonNull TextView place) {
    this.rootView = rootView;
    this.OrderID = OrderID;
    this.Receiver = Receiver;
    this.Sender = Sender;
    this.StartTime = StartTime;
    this.itemType = itemType;
    this.place = place;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemTwoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemTwoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_two, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemTwoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.OrderID;
      TextView OrderID = ViewBindings.findChildViewById(rootView, id);
      if (OrderID == null) {
        break missingId;
      }

      id = R.id.Receiver;
      TextView Receiver = ViewBindings.findChildViewById(rootView, id);
      if (Receiver == null) {
        break missingId;
      }

      id = R.id.Sender;
      TextView Sender = ViewBindings.findChildViewById(rootView, id);
      if (Sender == null) {
        break missingId;
      }

      id = R.id.StartTime;
      TextView StartTime = ViewBindings.findChildViewById(rootView, id);
      if (StartTime == null) {
        break missingId;
      }

      id = R.id.itemType;
      TextView itemType = ViewBindings.findChildViewById(rootView, id);
      if (itemType == null) {
        break missingId;
      }

      id = R.id.place;
      TextView place = ViewBindings.findChildViewById(rootView, id);
      if (place == null) {
        break missingId;
      }

      return new ListItemTwoBinding((CardView) rootView, OrderID, Receiver, Sender, StartTime,
          itemType, place);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
